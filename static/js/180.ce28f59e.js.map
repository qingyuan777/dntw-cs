{"version":3,"file":"js/180.ce28f59e.js","mappings":"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","sources":["webpack://southeast/./node_modules/echarts-wordcloud/index.js","webpack://southeast/./node_modules/echarts-wordcloud/src/WordCloudSeries.js","webpack://southeast/./node_modules/echarts-wordcloud/src/WordCloudView.js","webpack://southeast/./node_modules/echarts-wordcloud/src/layout.js","webpack://southeast/./node_modules/echarts-wordcloud/src/wordCloud.js"],"sourcesContent":["module.exports = require('./src/wordCloud');","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.wordCloud',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    // Most of options are from https://github.com/timdream/wordcloud2.js/blob/gh-pages/API.md\n    defaultOption: {\n\n        maskImage: null,\n\n        // Shape can be 'circle', 'cardioid', 'diamond', 'triangle-forward', 'triangle', 'pentagon', 'star'\n        shape: 'circle',\n\n        left: 'center',\n\n        top: 'center',\n\n        width: '70%',\n\n        height: '80%',\n\n        sizeRange: [12, 60],\n\n        rotationRange: [-90, 90],\n\n        rotationStep: 45,\n\n        gridSize: 8,\n\n        drawOutOfBound: false,\n\n        textStyle: {\n            normal: {\n                fontWeight: 'normal'\n            }\n        }\n    }\n});\n","var echarts = require('echarts/lib/echarts');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'wordCloud',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var gridSize = seriesModel.get('gridSize');\n\n        seriesModel.layoutInstance.ondraw = function (text, size, dataIdx, drawn) {\n            var itemModel = data.getItemModel(dataIdx);\n            var textStyleModel = itemModel.getModel('textStyle.normal');\n            var emphasisTextStyleModel = itemModel.getModel('textStyle.emphasis');\n\n            var textEl = new echarts.graphic.Text({\n                style: echarts.graphic.setTextStyle({}, textStyleModel, {\n                    x: drawn.info.fillTextOffsetX,\n                    y: drawn.info.fillTextOffsetY + size * 0.5,\n                    text: text,\n                    textBaseline: 'middle',\n                    textFill: data.getItemVisual(dataIdx, 'color'),\n                    fontSize: size\n                }),\n                scale: [1 / drawn.info.mu, 1 / drawn.info.mu],\n                position: [\n                    (drawn.gx + drawn.info.gw / 2) * gridSize,\n                    (drawn.gy + drawn.info.gh / 2) * gridSize\n                ],\n                rotation: drawn.rot\n            });\n\n            group.add(textEl);\n\n            data.setItemGraphicEl(dataIdx, textEl);\n\n            echarts.graphic.setHoverStyle(\n                textEl,\n                echarts.graphic.setTextStyle({}, emphasisTextStyleModel, null, {forMerge: true}, true)\n            );\n        };\n\n        this._model = seriesModel;\n    },\n\n    remove: function () {\n        this.group.removeAll();\n\n        this._model.layoutInstance.dispose();\n    },\n\n    dispose: function () {\n        this._model.layoutInstance.dispose();\n    }\n});\n","/*!\n * wordcloud2.js\n * http://timdream.org/wordcloud2.js/\n *\n * Copyright 2011 - 2013 Tim Chien\n * Released under the MIT license\n */\n\n'use strict';\n\n// setImmediate\nif (!window.setImmediate) {\n  window.setImmediate = (function setupSetImmediate() {\n    return window.msSetImmediate ||\n    window.webkitSetImmediate ||\n    window.mozSetImmediate ||\n    window.oSetImmediate ||\n    (function setupSetZeroTimeout() {\n      if (!window.postMessage || !window.addEventListener) {\n        return null;\n      }\n\n      var callbacks = [undefined];\n      var message = 'zero-timeout-message';\n\n      // Like setTimeout, but only takes a function argument.  There's\n      // no time argument (always zero) and no arguments (you have to\n      // use a closure).\n      var setZeroTimeout = function setZeroTimeout(callback) {\n        var id = callbacks.length;\n        callbacks.push(callback);\n        window.postMessage(message + id.toString(36), '*');\n\n        return id;\n      };\n\n      window.addEventListener('message', function setZeroTimeoutMessage(evt) {\n        // Skipping checking event source, retarded IE confused this window\n        // object with another in the presence of iframe\n        if (typeof evt.data !== 'string' ||\n            evt.data.substr(0, message.length) !== message/* ||\n            evt.source !== window */) {\n          return;\n        }\n\n        evt.stopImmediatePropagation();\n\n        var id = parseInt(evt.data.substr(message.length), 36);\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id]();\n        callbacks[id] = undefined;\n      }, true);\n\n      /* specify clearImmediate() here since we need the scope */\n      window.clearImmediate = function clearZeroTimeout(id) {\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id] = undefined;\n      };\n\n      return setZeroTimeout;\n    })() ||\n    // fallback\n    function setImmediateFallback(fn) {\n      window.setTimeout(fn, 0);\n    };\n  })();\n}\n\nif (!window.clearImmediate) {\n  window.clearImmediate = (function setupClearImmediate() {\n    return window.msClearImmediate ||\n    window.webkitClearImmediate ||\n    window.mozClearImmediate ||\n    window.oClearImmediate ||\n    // \"clearZeroTimeout\" is implement on the previous block ||\n    // fallback\n    function clearImmediateFallback(timer) {\n      window.clearTimeout(timer);\n    };\n  })();\n}\n\n(function(global) {\n\n  // Check if WordCloud can run on this browser\n  var isSupported = (function isSupported() {\n    var canvas = document.createElement('canvas');\n    if (!canvas || !canvas.getContext) {\n      return false;\n    }\n\n    var ctx = canvas.getContext('2d');\n    if (!ctx.getImageData) {\n      return false;\n    }\n    if (!ctx.fillText) {\n      return false;\n    }\n\n    if (!Array.prototype.some) {\n      return false;\n    }\n    if (!Array.prototype.push) {\n      return false;\n    }\n\n    return true;\n  }());\n\n  // Find out if the browser impose minium font size by\n  // drawing small texts on a canvas and measure it's width.\n  var minFontSize = (function getMinFontSize() {\n    if (!isSupported) {\n      return;\n    }\n\n    var ctx = document.createElement('canvas').getContext('2d');\n\n    // start from 20\n    var size = 20;\n\n    // two sizes to measure\n    var hanWidth, mWidth;\n\n    while (size) {\n      ctx.font = size.toString(10) + 'px sans-serif';\n      if ((ctx.measureText('\\uFF37').width === hanWidth) &&\n          (ctx.measureText('m').width) === mWidth) {\n        return (size + 1);\n      }\n\n      hanWidth = ctx.measureText('\\uFF37').width;\n      mWidth = ctx.measureText('m').width;\n\n      size--;\n    }\n\n    return 0;\n  })();\n\n  // Based on http://jsfromhell.com/array/shuffle\n  var shuffleArray = function shuffleArray(arr) {\n    for (var j, x, i = arr.length; i;\n      j = Math.floor(Math.random() * i),\n      x = arr[--i], arr[i] = arr[j],\n      arr[j] = x) {}\n    return arr;\n  };\n\n  var WordCloud = function WordCloud(elements, options) {\n    if (!isSupported) {\n      return;\n    }\n\n    if (!Array.isArray(elements)) {\n      elements = [elements];\n    }\n\n    elements.forEach(function(el, i) {\n      if (typeof el === 'string') {\n        elements[i] = document.getElementById(el);\n        if (!elements[i]) {\n          throw 'The element id specified is not found.';\n        }\n      } else if (!el.tagName && !el.appendChild) {\n        throw 'You must pass valid HTML elements, or ID of the element.';\n      }\n    });\n\n    /* Default values to be overwritten by options object */\n    var settings = {\n      list: [],\n      fontFamily: '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\n                  '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n      fontWeight: 'normal',\n      color: 'random-dark',\n      minSize: 0, // 0 to disable\n      weightFactor: 1,\n      clearCanvas: true,\n      backgroundColor: '#fff',  // opaque white = rgba(255, 255, 255, 1)\n\n      gridSize: 8,\n      drawOutOfBound: false,\n      origin: null,\n\n      drawMask: false,\n      maskColor: 'rgba(255,0,0,0.3)',\n      maskGapWidth: 0.3,\n\n      wait: 0,\n      abortThreshold: 0, // disabled\n      abort: function noop() {},\n\n      minRotation: - Math.PI / 2,\n      maxRotation: Math.PI / 2,\n      rotationStep: 0.1,\n\n      shuffle: true,\n      rotateRatio: 0.1,\n\n      shape: 'circle',\n      ellipticity: 0.65,\n\n      classes: null,\n\n      hover: null,\n      click: null\n    };\n\n    if (options) {\n      for (var key in options) {\n        if (key in settings) {\n          settings[key] = options[key];\n        }\n      }\n    }\n\n    /* Convert weightFactor into a function */\n    if (typeof settings.weightFactor !== 'function') {\n      var factor = settings.weightFactor;\n      settings.weightFactor = function weightFactor(pt) {\n        return pt * factor; //in px\n      };\n    }\n\n    /* Convert shape into a function */\n    if (typeof settings.shape !== 'function') {\n      switch (settings.shape) {\n        case 'circle':\n        /* falls through */\n        default:\n          // 'circle' is the default and a shortcut in the code loop.\n          settings.shape = 'circle';\n          break;\n\n        case 'cardioid':\n          settings.shape = function shapeCardioid(theta) {\n            return 1 - Math.sin(theta);\n          };\n          break;\n\n        /*\n        To work out an X-gon, one has to calculate \"m\",\n        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n        where t' equals to mod(t, 2PI/X);\n        */\n\n        case 'diamond':\n        case 'square':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n          // +0+..+2*PI\n          settings.shape = function shapeSquare(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 4);\n            return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle-forward':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n          // %29%29%2C+t+%3D+0+..+2*PI\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle':\n        case 'triangle-upright':\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'pentagon':\n          settings.shape = function shapePentagon(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);\n            return 1 / (Math.cos(thetaPrime) +\n                        0.726543 * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'star':\n          settings.shape = function shapeStar(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);\n            if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) {\n              return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) +\n                          3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime));\n            } else {\n              return 1 / (Math.cos(thetaPrime) +\n                          3.07768 * Math.sin(thetaPrime));\n            }\n          };\n          break;\n      }\n    }\n\n    /* Make sure gridSize is a whole number and is not smaller than 4px */\n    settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\n\n    /* shorthand */\n    var g = settings.gridSize;\n    var maskRectWidth = g - settings.maskGapWidth;\n\n    /* normalize rotation settings */\n    var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\n    var minRotation = Math.min(settings.maxRotation, settings.minRotation);\n    var rotationStep = settings.rotationStep;\n\n    /* information/object available to all functions, set when start() */\n    var grid, // 2d array containing filling information\n      ngx, ngy, // width and height of the grid\n      center, // position of the center of the cloud\n      maxRadius;\n\n    /* timestamp for measuring each putWord() action */\n    var escapeTime;\n\n    /* function for getting the color of the text */\n    var getTextColor;\n    function random_hsl_color(min, max) {\n      return 'hsl(' +\n        (Math.random() * 360).toFixed() + ',' +\n        (Math.random() * 30 + 70).toFixed() + '%,' +\n        (Math.random() * (max - min) + min).toFixed() + '%)';\n    }\n    switch (settings.color) {\n      case 'random-dark':\n        getTextColor = function getRandomDarkColor() {\n          return random_hsl_color(10, 50);\n        };\n        break;\n\n      case 'random-light':\n        getTextColor = function getRandomLightColor() {\n          return random_hsl_color(50, 90);\n        };\n        break;\n\n      default:\n        if (typeof settings.color === 'function') {\n          getTextColor = settings.color;\n        }\n        break;\n    }\n\n    /* function for getting the classes of the text */\n    var getTextClasses = null;\n    if (typeof settings.classes === 'function') {\n      getTextClasses = settings.classes;\n    }\n\n    /* Interactive */\n    var interactive = false;\n    var infoGrid = [];\n    var hovered;\n\n    var getInfoGridFromMouseTouchEvent =\n    function getInfoGridFromMouseTouchEvent(evt) {\n      var canvas = evt.currentTarget;\n      var rect = canvas.getBoundingClientRect();\n      var clientX;\n      var clientY;\n      /** Detect if touches are available */\n      if (evt.touches) {\n        clientX = evt.touches[0].clientX;\n        clientY = evt.touches[0].clientY;\n      } else {\n        clientX = evt.clientX;\n        clientY = evt.clientY;\n      }\n      var eventX = clientX - rect.left;\n      var eventY = clientY - rect.top;\n\n      var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g);\n      var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g);\n\n      return infoGrid[x][y];\n    };\n\n    var wordcloudhover = function wordcloudhover(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n\n      if (hovered === info) {\n        return;\n      }\n\n      hovered = info;\n      if (!info) {\n        settings.hover(undefined, undefined, evt);\n\n        return;\n      }\n\n      settings.hover(info.item, info.dimension, evt);\n\n    };\n\n    var wordcloudclick = function wordcloudclick(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n      if (!info) {\n        return;\n      }\n\n      settings.click(info.item, info.dimension, evt);\n      evt.preventDefault();\n    };\n\n    /* Get points on the grid for a given radius away from the center */\n    var pointsAtRadius = [];\n    var getPointsAtRadius = function getPointsAtRadius(radius) {\n      if (pointsAtRadius[radius]) {\n        return pointsAtRadius[radius];\n      }\n\n      // Look for these number of points on each radius\n      var T = radius * 8;\n\n      // Getting all the points at this radius\n      var t = T;\n      var points = [];\n\n      if (radius === 0) {\n        points.push([center[0], center[1], 0]);\n      }\n\n      while (t--) {\n        // distort the radius to put the cloud in shape\n        var rx = 1;\n        if (settings.shape !== 'circle') {\n          rx = settings.shape(t / T * 2 * Math.PI); // 0 to 1\n        }\n\n        // Push [x, y, t]; t is used solely for getTextColor()\n        points.push([\n          center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),\n          center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) *\n            settings.ellipticity,\n          t / T * 2 * Math.PI]);\n      }\n\n      pointsAtRadius[radius] = points;\n      return points;\n    };\n\n    /* Return true if we had spent too much time */\n    var exceedTime = function exceedTime() {\n      return ((settings.abortThreshold > 0) &&\n        ((new Date()).getTime() - escapeTime > settings.abortThreshold));\n    };\n\n    /* Get the deg of rotation according to settings, and luck. */\n    var getRotateDeg = function getRotateDeg() {\n      if (settings.rotateRatio === 0) {\n        return 0;\n      }\n\n      if (Math.random() > settings.rotateRatio) {\n        return 0;\n      }\n\n      if (rotationRange === 0) {\n        return minRotation;\n      }\n\n      return minRotation + Math.round(Math.random() * rotationRange / rotationStep) * rotationStep;\n    };\n\n    var getTextInfo = function getTextInfo(word, weight, rotateDeg) {\n      // calculate the acutal font size\n      // fontSize === 0 means weightFactor function wants the text skipped,\n      // and size < minSize means we cannot draw the text.\n      var debug = false;\n      var fontSize = settings.weightFactor(weight);\n      if (fontSize <= settings.minSize) {\n        return false;\n      }\n\n      // Scale factor here is to make sure fillText is not limited by\n      // the minium font size set by browser.\n      // It will always be 1 or 2n.\n      var mu = 1;\n      if (fontSize < minFontSize) {\n        mu = (function calculateScaleFactor() {\n          var mu = 2;\n          while (mu * fontSize < minFontSize) {\n            mu += 2;\n          }\n          return mu;\n        })();\n      }\n\n      var fcanvas = document.createElement('canvas');\n      var fctx = fcanvas.getContext('2d', { willReadFrequently: true });\n\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Estimate the dimension of the text with measureText().\n      var fw = fctx.measureText(word).width / mu;\n      var fh = Math.max(fontSize * mu,\n                        fctx.measureText('m').width,\n                        fctx.measureText('\\uFF37').width) / mu;\n\n      // Create a boundary box that is larger than our estimates,\n      // so text don't get cut of (it sill might)\n      var boxWidth = fw + fh * 2;\n      var boxHeight = fh * 3;\n      var fgw = Math.ceil(boxWidth / g);\n      var fgh = Math.ceil(boxHeight / g);\n      boxWidth = fgw * g;\n      boxHeight = fgh * g;\n\n      // Calculate the proper offsets to make the text centered at\n      // the preferred position.\n\n      // This is simply half of the width.\n      var fillTextOffsetX = - fw / 2;\n      // Instead of moving the box to the exact middle of the preferred\n      // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n      // vertical centered.\n      var fillTextOffsetY = - fh * 0.4;\n\n      // Calculate the actual dimension of the canvas, considering the rotation.\n      var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) +\n                           boxHeight * Math.abs(Math.cos(rotateDeg))) / g);\n      var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) +\n                           boxHeight * Math.abs(Math.sin(rotateDeg))) / g);\n      var width = cgw * g;\n      var height = cgh * g;\n\n      fcanvas.setAttribute('width', width);\n      fcanvas.setAttribute('height', height);\n\n      if (debug) {\n        // Attach fcanvas to the DOM\n        document.body.appendChild(fcanvas);\n        // Save it's state so that we could restore and draw the grid correctly.\n        fctx.save();\n      }\n\n      // Scale the canvas with |mu|.\n      fctx.scale(1 / mu, 1 / mu);\n      fctx.translate(width * mu / 2, height * mu / 2);\n      fctx.rotate(- rotateDeg);\n\n      // Once the width/height is set, ctx info will be reset.\n      // Set it again here.\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Fill the text into the fcanvas.\n      // XXX: We cannot because textBaseline = 'top' here because\n      // Firefox and Chrome uses different default line-height for canvas.\n      // Please read https://bugzil.la/737852#c6.\n      // Here, we use textBaseline = 'middle' and draw the text at exactly\n      // 0.5 * fontSize lower.\n      fctx.fillStyle = '#000';\n      fctx.textBaseline = 'middle';\n      fctx.fillText(word, fillTextOffsetX * mu,\n                    (fillTextOffsetY + fontSize * 0.5) * mu);\n\n      // Get the pixels of the text\n      var imageData = fctx.getImageData(0, 0, width, height).data;\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      if (debug) {\n        // Draw the box of the original estimation\n        fctx.strokeRect(fillTextOffsetX * mu,\n                        fillTextOffsetY, fw * mu, fh * mu);\n        fctx.restore();\n      }\n\n      // Read the pixels and save the information to the occupied array\n      var occupied = [];\n      var gx = cgw, gy, x, y;\n      var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\n      while (gx--) {\n        gy = cgh;\n        while (gy--) {\n          y = g;\n          singleGridLoop: {\n            while (y--) {\n              x = g;\n              while (x--) {\n                if (imageData[((gy * g + y) * width +\n                               (gx * g + x)) * 4 + 3]) {\n                  occupied.push([gx, gy]);\n\n                  if (gx < bounds[3]) {\n                    bounds[3] = gx;\n                  }\n                  if (gx > bounds[1]) {\n                    bounds[1] = gx;\n                  }\n                  if (gy < bounds[0]) {\n                    bounds[0] = gy;\n                  }\n                  if (gy > bounds[2]) {\n                    bounds[2] = gy;\n                  }\n\n                  if (debug) {\n                    fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n                    fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n                  }\n                  break singleGridLoop;\n                }\n              }\n            }\n            if (debug) {\n              fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';\n              fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n            }\n          }\n        }\n      }\n\n      if (debug) {\n        fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';\n        fctx.fillRect(bounds[3] * g,\n                      bounds[0] * g,\n                      (bounds[1] - bounds[3] + 1) * g,\n                      (bounds[2] - bounds[0] + 1) * g);\n      }\n\n      // Return information needed to create the text on the real canvas\n      return {\n        mu: mu,\n        occupied: occupied,\n        bounds: bounds,\n        gw: cgw,\n        gh: cgh,\n        fillTextOffsetX: fillTextOffsetX,\n        fillTextOffsetY: fillTextOffsetY,\n        fillTextWidth: fw,\n        fillTextHeight: fh,\n        fontSize: fontSize\n      };\n    };\n\n    /* Determine if there is room available in the given dimension */\n    var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\n      // Go through the occupied points,\n      // return false if the space is not available.\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          if (!settings.drawOutOfBound) {\n            return false;\n          }\n          continue;\n        }\n\n        if (!grid[px][py]) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    /* Actually draw the text on the grid */\n    var drawText = function drawText(gx, gy, info, word, weight,\n                                     distance, theta, rotateDeg, attributes) {\n\n      var fontSize = info.fontSize;\n      var color;\n      if (getTextColor) {\n        color = getTextColor(word, weight, fontSize, distance, theta);\n      } else {\n        color = settings.color;\n      }\n\n      var classes;\n      if (getTextClasses) {\n        classes = getTextClasses(word, weight, fontSize, distance, theta);\n      } else {\n        classes = settings.classes;\n      }\n\n      var dimension;\n      var bounds = info.bounds;\n      dimension = {\n        x: (gx + bounds[3]) * g,\n        y: (gy + bounds[0]) * g,\n        w: (bounds[1] - bounds[3] + 1) * g,\n        h: (bounds[2] - bounds[0] + 1) * g\n      };\n\n      elements.forEach(function(el) {\n        if (el.getContext) {\n          var ctx = el.getContext('2d');\n          var mu = info.mu;\n\n          // Save the current state before messing it\n          ctx.save();\n          ctx.scale(1 / mu, 1 / mu);\n\n          ctx.font = settings.fontWeight + ' ' +\n                     (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n          ctx.fillStyle = color;\n\n          // Translate the canvas position to the origin coordinate of where\n          // the text should be put.\n          ctx.translate((gx + info.gw / 2) * g * mu,\n                        (gy + info.gh / 2) * g * mu);\n\n          if (rotateDeg !== 0) {\n            ctx.rotate(- rotateDeg);\n          }\n\n          // Finally, fill the text.\n\n          // XXX: We cannot because textBaseline = 'top' here because\n          // Firefox and Chrome uses different default line-height for canvas.\n          // Please read https://bugzil.la/737852#c6.\n          // Here, we use textBaseline = 'middle' and draw the text at exactly\n          // 0.5 * fontSize lower.\n          ctx.textBaseline = 'middle';\n          ctx.fillText(word, info.fillTextOffsetX * mu,\n                             (info.fillTextOffsetY + fontSize * 0.5) * mu);\n\n          // The below box is always matches how <span>s are positioned\n          /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight); */\n\n          // Restore the state.\n          ctx.restore();\n        } else {\n          // drawText on DIV element\n          var span = document.createElement('span');\n          var transformRule = '';\n          transformRule = 'rotate(' + (- rotateDeg / Math.PI * 180) + 'deg) ';\n          if (info.mu !== 1) {\n            transformRule +=\n              'translateX(-' + (info.fillTextWidth / 4) + 'px) ' +\n              'scale(' + (1 / info.mu) + ')';\n          }\n          var styleRules = {\n            'position': 'absolute',\n            'display': 'block',\n            'font': settings.fontWeight + ' ' +\n                    (fontSize * info.mu) + 'px ' + settings.fontFamily,\n            'left': ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px',\n            'top': ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px',\n            'width': info.fillTextWidth + 'px',\n            'height': info.fillTextHeight + 'px',\n            'lineHeight': fontSize + 'px',\n            'whiteSpace': 'nowrap',\n            'transform': transformRule,\n            'webkitTransform': transformRule,\n            'msTransform': transformRule,\n            'transformOrigin': '50% 40%',\n            'webkitTransformOrigin': '50% 40%',\n            'msTransformOrigin': '50% 40%'\n          };\n          if (color) {\n            styleRules.color = color;\n          }\n          span.textContent = word;\n          for (var cssProp in styleRules) {\n            span.style[cssProp] = styleRules[cssProp];\n          }\n          if (attributes) {\n            for (var attribute in attributes) {\n              span.setAttribute(attribute, attributes[attribute]);\n            }\n          }\n          if (classes) {\n            span.className += classes;\n          }\n          el.appendChild(span);\n        }\n      });\n    };\n\n    /* Help function to updateGrid */\n    var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\n      if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n        return;\n      }\n\n      grid[x][y] = false;\n\n      if (drawMask) {\n        var ctx = elements[0].getContext('2d');\n        ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\n      }\n\n      if (interactive) {\n        infoGrid[x][y] = { item: item, dimension: dimension };\n      }\n    };\n\n    /* Update the filling information of the given space with occupied points.\n       Draw the mask on the canvas if necessary. */\n    var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\n      var occupied = info.occupied;\n      var drawMask = settings.drawMask;\n      var ctx;\n      if (drawMask) {\n        ctx = elements[0].getContext('2d');\n        ctx.save();\n        ctx.fillStyle = settings.maskColor;\n      }\n\n      var dimension;\n      if (interactive) {\n        var bounds = info.bounds;\n        dimension = {\n          x: (gx + bounds[3]) * g,\n          y: (gy + bounds[0]) * g,\n          w: (bounds[1] - bounds[3] + 1) * g,\n          h: (bounds[2] - bounds[0] + 1) * g\n        };\n      }\n\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          continue;\n        }\n\n        fillGridAt(px, py, drawMask, dimension, item);\n      }\n\n      if (drawMask) {\n        ctx.restore();\n      }\n    };\n\n    /* putWord() processes each item on the list,\n       calculate it's size and determine it's position, and actually\n       put it on the canvas. */\n    var putWord = function putWord(item) {\n      var word, weight, attributes;\n      if (Array.isArray(item)) {\n        word = item[0];\n        weight = item[1];\n      } else {\n        word = item.word;\n        weight = item.weight;\n        attributes = item.attributes;\n      }\n      var rotateDeg = getRotateDeg();\n\n      // get info needed to put the text onto the canvas\n      var info = getTextInfo(word, weight, rotateDeg);\n\n      // not getting the info means we shouldn't be drawing this one.\n      if (!info) {\n        return false;\n      }\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      // If drawOutOfBound is set to false,\n      // skip the loop if we have already know the bounding box of\n      // word is larger than the canvas.\n      if (!settings.drawOutOfBound) {\n        var bounds = info.bounds;\n        if ((bounds[1] - bounds[3] + 1) > ngx ||\n          (bounds[2] - bounds[0] + 1) > ngy) {\n          return false;\n        }\n      }\n\n      // Determine the position to put the text by\n      // start looking for the nearest points\n      var r = maxRadius + 1;\n\n      var tryToPutWordAtPoint = function(gxy) {\n        var gx = Math.floor(gxy[0] - info.gw / 2);\n        var gy = Math.floor(gxy[1] - info.gh / 2);\n        var gw = info.gw;\n        var gh = info.gh;\n\n        // If we cannot fit the text at this position, return false\n        // and go to the next position.\n        if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n          return false;\n        }\n\n        // Actually put the text on the canvas\n        drawText(gx, gy, info, word, weight,\n                 (maxRadius - r), gxy[2], rotateDeg, attributes);\n\n        // Mark the spaces on the grid as filled\n        updateGrid(gx, gy, gw, gh, info, item);\n\n        return {\n          gx: gx,\n          gy: gy,\n          rot: rotateDeg,\n          info: info\n        };\n      };\n\n      while (r--) {\n        var points = getPointsAtRadius(maxRadius - r);\n\n        if (settings.shuffle) {\n          points = [].concat(points);\n          shuffleArray(points);\n        }\n\n        // Try to fit the words by looking at each point.\n        // array.some() will stop and return true\n        // when putWordAtPoint() returns true.\n        for (var i = 0; i < points.length; i++) {\n          var res = tryToPutWordAtPoint(points[i]);\n          if (res) {\n            return res;\n          }\n        }\n\n        // var drawn = points.some(tryToPutWordAtPoint);\n        // if (drawn) {\n        //   // leave putWord() and return true\n        //   return true;\n        // }\n      }\n      // we tried all distances but text won't fit, return null\n      return null;\n    };\n\n    /* Send DOM event to all elements. Will stop sending event and return\n       if the previous one is canceled (for cancelable events). */\n    var sendEvent = function sendEvent(type, cancelable, detail) {\n      if (cancelable) {\n        return !elements.some(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          return !el.dispatchEvent(evt);\n        }, this);\n      } else {\n        elements.forEach(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          el.dispatchEvent(evt);\n        }, this);\n      }\n    };\n\n    /* Start drawing on a canvas */\n    var start = function start() {\n      // For dimensions, clearCanvas etc.,\n      // we only care about the first element.\n      var canvas = elements[0];\n\n      if (canvas.getContext) {\n        ngx = Math.ceil(canvas.width / g);\n        ngy = Math.ceil(canvas.height / g);\n      } else {\n        var rect = canvas.getBoundingClientRect();\n        ngx = Math.ceil(rect.width / g);\n        ngy = Math.ceil(rect.height / g);\n      }\n\n      // Sending a wordcloudstart event which cause the previous loop to stop.\n      // Do nothing if the event is canceled.\n      if (!sendEvent('wordcloudstart', true)) {\n        return;\n      }\n\n      // Determine the center of the word cloud\n      center = (settings.origin) ?\n        [settings.origin[0]/g, settings.origin[1]/g] :\n        [ngx / 2, ngy / 2];\n\n      // Maxium radius to look for space\n      maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\n\n      /* Clear the canvas only if the clearCanvas is set,\n         if not, update the grid to the current canvas state */\n      grid = [];\n\n      var gx, gy, i;\n      if (!canvas.getContext || settings.clearCanvas) {\n        elements.forEach(function(el) {\n          if (el.getContext) {\n            var ctx = el.getContext('2d');\n            ctx.fillStyle = settings.backgroundColor;\n            ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n            ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n          } else {\n            el.textContent = '';\n            el.style.backgroundColor = settings.backgroundColor;\n            el.style.position = 'relative';\n          }\n        });\n\n        /* fill the grid with empty state */\n        gx = ngx;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            grid[gx][gy] = true;\n          }\n        }\n      } else {\n        /* Determine bgPixel by creating\n           another canvas and fill the specified background color. */\n        var bctx = document.createElement('canvas').getContext('2d');\n\n        bctx.fillStyle = settings.backgroundColor;\n        bctx.fillRect(0, 0, 1, 1);\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n        /* Read back the pixels of the canvas we got to tell which part of the\n           canvas is empty.\n           (no clearCanvas only works with a canvas, not divs) */\n        var imageData =\n          canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data;\n\n        gx = ngx;\n        var x, y;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            y = g;\n            singleGridLoop: while (y--) {\n              x = g;\n              while (x--) {\n                i = 4;\n                while (i--) {\n                  if (imageData[((gy * g + y) * ngx * g +\n                                 (gx * g + x)) * 4 + i] !== bgPixel[i]) {\n                    grid[gx][gy] = false;\n                    break singleGridLoop;\n                  }\n                }\n              }\n            }\n            if (grid[gx][gy] !== false) {\n              grid[gx][gy] = true;\n            }\n          }\n        }\n\n        imageData = bctx = bgPixel = undefined;\n      }\n\n      // fill the infoGrid with empty state if we need it\n      if (settings.hover || settings.click) {\n\n        interactive = true;\n\n        /* fill the grid with empty state */\n        gx = ngx + 1;\n        while (gx--) {\n          infoGrid[gx] = [];\n        }\n\n        if (settings.hover) {\n          canvas.addEventListener('mousemove', wordcloudhover);\n        }\n\n        if (settings.click) {\n          canvas.addEventListener('click', wordcloudclick);\n          canvas.addEventListener('touchstart', wordcloudclick);\n          canvas.addEventListener('touchend', function (e) {\n            e.preventDefault();\n          });\n          canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n        }\n\n        canvas.addEventListener('wordcloudstart', function stopInteraction() {\n          canvas.removeEventListener('wordcloudstart', stopInteraction);\n\n          canvas.removeEventListener('mousemove', wordcloudhover);\n          canvas.removeEventListener('click', wordcloudclick);\n          hovered = undefined;\n        });\n      }\n\n      i = 0;\n      var loopingFunction, stoppingFunction;\n      if (settings.wait !== 0) {\n        loopingFunction = window.setTimeout;\n        stoppingFunction = window.clearTimeout;\n      } else {\n        loopingFunction = window.setImmediate;\n        stoppingFunction = window.clearImmediate;\n      }\n\n      var addEventListener = function addEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.addEventListener(type, listener);\n        }, this);\n      };\n\n      var removeEventListener = function removeEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.removeEventListener(type, listener);\n        }, this);\n      };\n\n      var anotherWordCloudStart = function anotherWordCloudStart() {\n        removeEventListener('wordcloudstart', anotherWordCloudStart);\n        stoppingFunction(timer);\n      };\n\n      addEventListener('wordcloudstart', anotherWordCloudStart);\n\n      var timer = loopingFunction(function loop() {\n        if (i >= settings.list.length) {\n          stoppingFunction(timer);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n\n          return;\n        }\n        escapeTime = (new Date()).getTime();\n        var drawn = putWord(settings.list[i]);\n        var canceled = !sendEvent('wordclouddrawn', true, {\n          item: settings.list[i], drawn: drawn });\n        if (exceedTime() || canceled) {\n          stoppingFunction(timer);\n          settings.abort();\n          sendEvent('wordcloudabort', false);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n          return;\n        }\n        i++;\n        timer = loopingFunction(loop, settings.wait);\n      }, settings.wait);\n    };\n\n    // All set, start the drawing\n    start();\n  };\n\n  WordCloud.isSupported = isSupported;\n  WordCloud.minFontSize = minFontSize;\n\n  // Expose the library as an AMD module\n  if (typeof define === 'function' && define.amd) {\n    define('wordcloud', [], function() { return WordCloud; });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = WordCloud;\n  } else {\n    global.WordCloud = WordCloud;\n  }\n\n})(this); //jshint ignore:line","var echarts = require('echarts/lib/echarts');\nvar layoutUtil = require('echarts/lib/util/layout');\n\nrequire('./WordCloudSeries');\nrequire('./WordCloudView');\n\nvar wordCloudLayoutHelper = require('./layout');\n\nif (!wordCloudLayoutHelper.isSupported) {\n    throw new Error('Sorry your browser not support wordCloud');\n}\n\n// https://github.com/timdream/wordcloud2.js/blob/c236bee60436e048949f9becc4f0f67bd832dc5c/index.js#L233\nfunction updateCanvasMask(maskCanvas) {\n    var ctx = maskCanvas.getContext('2d');\n    var imageData = ctx.getImageData(\n        0, 0, maskCanvas.width, maskCanvas.height);\n    var newImageData = ctx.createImageData(imageData);\n\n    var toneSum = 0;\n    var toneCnt = 0;\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var alpha = imageData.data[i + 3];\n        if (alpha > 128) {\n            var tone = imageData.data[i]\n                + imageData.data[i + 1]\n                + imageData.data[i + 2];\n            toneSum += tone;\n            ++toneCnt;\n        }\n    }\n    var threshold = toneSum / toneCnt;\n\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var tone = imageData.data[i]\n            + imageData.data[i + 1]\n            + imageData.data[i + 2];\n        var alpha = imageData.data[i + 3];\n\n        if (alpha < 128 || tone > threshold) {\n            // Area not to draw\n            newImageData.data[i] = 0;\n            newImageData.data[i + 1] = 0;\n            newImageData.data[i + 2] = 0;\n            newImageData.data[i + 3] = 0;\n        }\n        else {\n            // Area to draw\n            // The color must be same with backgroundColor\n            newImageData.data[i] = 255;\n            newImageData.data[i + 1] = 255;\n            newImageData.data[i + 2] = 255;\n            newImageData.data[i + 3] = 255;\n        }\n    }\n\n    ctx.putImageData(newImageData, 0, 0);\n}\n\necharts.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('wordCloud', function (seriesModel) {\n        var gridRect = layoutUtil.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n        var data = seriesModel.getData();\n\n        var canvas = document.createElement('canvas');\n        canvas.width = gridRect.width;\n        canvas.height = gridRect.height;\n\n        var ctx = canvas.getContext('2d');\n        var maskImage = seriesModel.get('maskImage');\n        if (maskImage) {\n            try {\n                ctx.drawImage(maskImage, 0, 0, canvas.width, canvas.height);\n                updateCanvasMask(canvas);\n            }\n            catch (e) {\n                console.error('Invalid mask image');\n                console.error(e.toString());\n            }\n        }\n\n        var sizeRange = seriesModel.get('sizeRange');\n        var rotationRange = seriesModel.get('rotationRange');\n        var valueExtent = data.getDataExtent('value');\n\n        var DEGREE_TO_RAD = Math.PI / 180;\n        var gridSize = seriesModel.get('gridSize');\n        wordCloudLayoutHelper(canvas, {\n            list: data.mapArray('value', function (value, idx) {\n                var itemModel = data.getItemModel(idx);\n                return [\n                    data.getName(idx),\n                    itemModel.get('textStyle.normal.textSize', true)\n                        || echarts.number.linearMap(value, valueExtent, sizeRange),\n                    idx\n                ];\n            }).sort(function (a, b) {\n                // Sort from large to small in case there is no more room for more words\n                return b[1] - a[1];\n            }),\n            fontFamily: seriesModel.get('textStyle.normal.fontFamily')\n                || seriesModel.get('textStyle.emphasis.fontFamily')\n                || ecModel.get('textStyle.fontFamily'),\n            fontWeight: seriesModel.get('textStyle.normal.fontWeight')\n                || seriesModel.get('textStyle.emphasis.fontWeight')\n                || ecModel.get('textStyle.fontWeight'),\n            gridSize: gridSize,\n\n            ellipticity: gridRect.height / gridRect.width,\n\n            minRotation: rotationRange[0] * DEGREE_TO_RAD,\n            maxRotation: rotationRange[1] * DEGREE_TO_RAD,\n\n            clearCanvas: !maskImage,\n\n            rotateRatio: 1,\n\n            rotationStep: seriesModel.get('rotationStep') * DEGREE_TO_RAD,\n\n            drawOutOfBound: seriesModel.get('drawOutOfBound'),\n\n            shuffle: false,\n\n            shape: seriesModel.get('shape')\n        });\n\n        function onWordCloudDrawn(e) {\n            var item = e.detail.item;\n            if (e.detail.drawn && seriesModel.layoutInstance.ondraw) {\n                e.detail.drawn.gx += gridRect.x / gridSize;\n                e.detail.drawn.gy += gridRect.y / gridSize;\n                seriesModel.layoutInstance.ondraw(\n                    item[0], item[1], item[2], e.detail.drawn\n                );\n            }\n        }\n\n        canvas.addEventListener('wordclouddrawn', onWordCloudDrawn);\n\n        if (seriesModel.layoutInstance) {\n            // Dispose previous\n            seriesModel.layoutInstance.dispose();\n        }\n\n        seriesModel.layoutInstance = {\n            ondraw: null,\n\n            dispose: function () {\n                canvas.removeEventListener('wordclouddrawn', onWordCloudDrawn);\n                // Abort\n                canvas.addEventListener('wordclouddrawn', function (e) {\n                    // Prevent default to cancle the event and stop the loop\n                    e.preventDefault();\n                });\n            }\n        };\n    });\n});\n\necharts.registerPreprocessor(function (option) {\n    var series = (option || {}).series;\n    !echarts.util.isArray(series) && (series = series ? [series] : []);\n\n    var compats = ['shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n\n    echarts.util.each(series, function (seriesItem) {\n        if (seriesItem && seriesItem.type === 'wordCloud') {\n            var textStyle = seriesItem.textStyle || {};\n\n            compatTextStyle(textStyle.normal);\n            compatTextStyle(textStyle.emphasis);\n        }\n    });\n\n    function compatTextStyle(textStyle) {\n        textStyle && echarts.util.each(compats, function (key) {\n            if (textStyle.hasOwnProperty(key)) {\n                textStyle['text' + echarts.format.capitalFirst(key)] = textStyle[key];\n            }\n        });\n    }\n});\n"],"names":["module","completeDimensions","require","echarts","extendSeriesModel","type","visualColorAccessPath","optionUpdated","option","this","gridSize","Math","max","floor","getInitialData","ecModel","dimensions","data","list","List","initData","defaultOption","maskImage","shape","left","top","width","height","sizeRange","rotationRange","rotationStep","drawOutOfBound","textStyle","normal","fontWeight","extendChartView","render","seriesModel","api","group","removeAll","getData","get","layoutInstance","ondraw","text","size","dataIdx","drawn","itemModel","getItemModel","textStyleModel","getModel","emphasisTextStyleModel","textEl","graphic","Text","style","setTextStyle","x","info","fillTextOffsetX","y","fillTextOffsetY","textBaseline","textFill","getItemVisual","fontSize","scale","mu","position","gx","gw","gy","gh","rotation","rot","add","setItemGraphicEl","setHoverStyle","forMerge","_model","remove","dispose","window","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","addEventListener","callbacks","undefined","message","setZeroTimeout","callback","id","length","push","toString","evt","substr","stopImmediatePropagation","parseInt","clearImmediate","fn","setTimeout","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","clearTimeout","global","isSupported","canvas","document","createElement","getContext","ctx","getImageData","fillText","Array","prototype","some","minFontSize","hanWidth","mWidth","font","measureText","shuffleArray","arr","j","i","random","WordCloud","elements","options","isArray","forEach","el","getElementById","tagName","appendChild","settings","fontFamily","color","minSize","weightFactor","clearCanvas","backgroundColor","origin","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","minRotation","PI","maxRotation","shuffle","rotateRatio","ellipticity","classes","hover","click","key","factor","pt","theta","sin","thetaPrime","cos","sqrt","grid","ngx","ngy","center","maxRadius","escapeTime","getTextColor","g","maskRectWidth","abs","min","random_hsl_color","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","rect","getBoundingClientRect","touches","eventX","eventY","wordcloudhover","item","dimension","wordcloudclick","preventDefault","pointsAtRadius","getPointsAtRadius","radius","T","t","points","rx","exceedTime","Date","getTime","getRotateDeg","round","getTextInfo","word","weight","rotateDeg","debug","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","cgh","cgw","setAttribute","body","save","translate","rotate","fillStyle","imageData","strokeRect","restore","occupied","bounds","singleGridLoop","fillRect","fillTextWidth","fillTextHeight","canFitText","px","py","drawText","distance","attributes","span","transformRule","styleRules","cssProp","textContent","attribute","className","fillGridAt","updateGrid","w","h","putWord","r","tryToPutWordAtPoint","gxy","concat","res","sendEvent","cancelable","detail","createEvent","initCustomEvent","dispatchEvent","start","loopingFunction","stoppingFunction","clearRect","bctx","bgPixel","e","webkitTapHighlightColor","stopInteraction","removeEventListener","listener","anotherWordCloudStart","loop","canceled","toFixed","define","layoutUtil","wordCloudLayoutHelper","Error","updateCanvasMask","maskCanvas","newImageData","createImageData","toneSum","toneCnt","alpha","tone","threshold","putImageData","registerLayout","eachSeriesByType","gridRect","getLayoutRect","getBoxLayoutParams","getWidth","getHeight","drawImage","console","error","valueExtent","getDataExtent","DEGREE_TO_RAD","onWordCloudDrawn","mapArray","value","idx","getName","number","linearMap","sort","a","b","registerPreprocessor","series","util","compats","compatTextStyle","each","hasOwnProperty","format","capitalFirst","seriesItem","emphasis"],"sourceRoot":""}